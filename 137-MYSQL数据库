什么是数据库
  数据库的介绍
  生活中的数据
  常见软件
  专业术语
MySQL介绍
  起源与发展
  特点和应用
MySQL服务器
        MySQL安装
                准备环境
                安装软件
                启动服务
                相关参数
        MySQL初始配置      
                初始密码登录
                修改root密码
                修改密码策略
数据库基本管理
        连接MYSQL服务
                连接方式
                数据存储流程
                mysql管理环境
        MYSQL基本操作
                库管理命令
                表管理命令
                记录管理命令

MYSQl 数据类型
        RDBMS 关系型数据库
        数据类型的种类
                数值类：体重、身高、成绩、工资
                字符型：姓名、工作单位、通信地
                枚举类：兴趣爱好、性别、专业
                日期时间型：出生日期、注册时间
表结构
约束条件
        作用是限制如何给字段赋值
        NULL
        KEY     键值     
        DEFAULT 默认值
        Extra
修改表结构
        命令 alter table 库名.表名 执行动作
                执行动作
                        添加新字段
                        修改字段类型
                        修改字段名
                        删除字段
                        修改表名
MYSQL键值
        MYSQL键值概述
                键值类型
                索引介绍
                索引优缺点
        MYSQL键值使用
                INdex普通索引
                primary key主键
                foreign key外键


################################################################################################################################################
 什么是数据库
  数据库的介绍：存储数据的仓库
  生活中的数据：视频、音频、图片、文本
  常见软件
          软件名         开源     跨平台    厂商
          Oracle        否       是       甲骨文
          MySQL         是       是       甲骨文
          SQL Server    否       否       微软
          DB2           否       是       IBM
          Redis         是       是       开源
          Memcached     是       是       开源
          MongoDB       是       是       开源
  专业术语
        DB（Database）
                数据库
                依照某种数据模型进行组织并存放到存储器的数据集合
        DBMS（Database Management System）
                数据库管理系统
                用来操纵和管理数据库的服务软件
        DBS（Database System）
                数据库系统：DB+DBMS
                带有数据库，并整合了数据库管理软件的计算机系统
MySQL介绍
  起源与发展
        MariaDB是MYSQL开源软件
  特点和应用
        特点
                中小规模，关系型数据库
                支持Linux、Unix、Windows等多种操作系统
                支持Python、Java、Perl、PHP等编程语言
        典型的应用环境
                LAMP Apache HTTP Server组合
                LNMP 与Nginx组合
                
MySQL服务器
        MySQL安装
                准备环境
                        CentOS系统虚拟机一台
                        配置IP192.168.4.50
                        关闭Firewall
                        禁用SELinux
                        拷贝软件mysql-5.7.17.tar
                                关闭mariadb           [root@hejian_alicloud ~]# systemctl status mariadb
                                关闭开机自启动          [root@hejian_alicloud ~]# systemctl disable mariadb
                                删除mysql类配置文件     [root@hejian_alicloud ~]# rm -rf /etc/my.cnf               删除配置文件
                                                      [root@hejian_alicloud ~]# rm -rf /var/lib/mysql/*         删除数据
                                卸载mariadb            [root@hejian_alicloud ~]# rpm -e --nodeps mariadb-server mariadb   强制卸载
                        配置yum源
                安装软件
                      使用安装yum源的方法安装
                      完整教程
                      https://cloud.tencent.com/developer/article/1886339
                      1. 下载 MySQL yum包
                      wget http://repo.mysql.com/mysql57-community-release-el7-10.noarch.rpm
                      2.安装MySQL源
                      rpm -Uvh mysql57-community-release-el7-10.noarch.rpm
                      复制
                      3.安装MySQL服务端,需要等待一些时间
                      yum install -y mysql-community-server
                      
                      出现上述提示原因是Mysql的GPG升级了，需要重新获取
                      执行： rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
                      再次进行服务安装：yum -y install mysql-server mysql    
                启动服务
                        数据库目录           [root@hejian_alicloud ~]# ls /var/lib/mysql
                        mysql的配置文件      [root@hejian_alicloud ~]# cat /etc/my.cnf       
                        [root@hejian_alicloud ~]# systemctl start mysqld
                        [root@hejian_alicloud ~]# systemctl enable mysqld
                相关参数
                        首次创建，/var/lib/mysql
                        查看进程    [root@hejian_alicloud ~]# ps -aux | grep -i mysqld
                        查看端口    [root@hejian_alicloud ~]# netstat -lnptu | grep -i 3306
                        传输协议    TCP
                        进程所属组   mysql
                        进程所有者   mysql
                        错误日志文件  /var/log/mysqld.log
                MySQL初始配置
                        管理员     root
                        首次登录密码在安装软件时，随机生成
                        随机密码在/var/log/mysqld.log里       [root@hejian_alicloud ~]# cat /var/log/mysqld.log | grep -i password
                        连接命令    mysql -h数据库地址 -u用户名 -p密码
                初始密码登录
                        [root@hejian_alicloud ~]# mysql -hlocalhost -uroot -p'Rff%j#P=P2hZ'
                        必须初始化密码
                        mysql> alter user root@"localhost" identified by "****";
                        退出后，重新登录一下
                        [root@hejian_alicloud ~]# mysql -hlocalhost -uroot -p'****'       
                修改root密码
                         策略名称                         验证方式
                         0 OR LOW                       长度
                         1 OR MEDIUM（默认）              长度；数字，小写、大写和特殊字符
                         2 OR STRONG                    长度；数字，小写、大写和特殊字符；字典文件
                         
                修改密码策略
                        查看密码策略：         mysql> show variables like "%password%";
                                            like包含
                        临时立即生效
                                set global validate_password_policy=0;//修改密码策略
                                set global validate_password_length=6;//修改密码长度
                        永久生效
                                vim /etc/my.cnf
                                [mysql]
                                validate_password_policy=0
                                validate_password_length=6
                                
数据库基本管理
        连接MYSQL服务
                连接方式
                        命令行
                                显示当前在哪个库下       mysql> select database();
                                登录时带库名            [root@hejian_alicloud ~]# mysql -uroot -p'***' mysql
                        web
                        图形
                        编写脚本（php、java、python。。）
                        连接命令    mysql -h服务器IP -u用户名 -p密码 【数据库名】
                数据存储流程
                        连接数据库服务器
                        建库                      //类似于文件夹
                        建表                      //类似于文件
                        插入记录                   //类似于文件内容 
                        断开连接
                mysql管理环境
                        SQL命令使用规则
                                SQL命令不区分字母大小写（密码、变量值除外）
                                每条SQL命令以;结束
                                默认命令不支持Tab键补齐
                                \c 终止sql命令
                        常用的SQL命令分类
                                管理数据库使用SQL（结构化查询语言）
                                DDL     数据定义语言  如：create、alter、drop
                                DML     数据操作语言  如：insert、update、delete
                                DCL     数据控制语言  如：grant、revoke
                                DTL     数据事务语言  如：commit、rollback、savepoint  
        MYSQL基本操作
                库管理命令
                        库       类似于文件夹，用来存储表
                        可以创建多个库，通过库名区分
                        mysql> show databases;                                          //显示已有库
                        mysql> select user();                                           //显示连接用户
                        mysql> use mysql;                                               //切换库
                        mysql> select database();                                       //显示当前所在库
                        mysql> create database laohe_mysql;                             //创建库
                                库名 命名规则
                                        仅可以使用数字、字母、下划线；不能使用纯数字；
                                        区分字母大小写，具有唯一性
                                        不可使用指令关键字、特殊字符
                                创建完数据库，/var/lib/mysql 下会有一个文件夹
                                        [root@hejian_alicloud mysql]# cd laohe_mysql/
                                        [root@hejian_alicloud laohe_mysql]# ls
                        mysql> show tables;                                             //显示当前库的表
                        mysql> drop database laohe_mysql;                               //删除库
                表管理命令
                        建表
                                表示存储数据的文件；
                                mysql> use laohe_mysql;
                                mysql> select database();
                                mysql> create table laohe_mysql.stuinfo(
                                    -> name char(15),
                                    -> homeaddr char(20)
                                    -> ) DEFAULT CHARSET=utf8;                          //指定中文字符集，可以给字段赋值中文
                记录管理命令
                        记录                                   
                                mysql> desc laohe_mysql.stuinfo;                        //查看表中列类型
                                mysql> select * from laohe_mysql.stuinfo;               //查看表中的具体内容
                                mysql> insert into laohe_mysql.stuinfo values("laohe","xian"),("laozhang","beijing");
                                mysql> select * from laohe_mysql.stuinfo;
                                mysql> update laohe_mysql.stuinfo set homeaddr="meiguo";  //update set 修改表内容；
                                mysql> delete from laohe_mysql.stuinfo;                   //删除表中内容，不删除表；删除表用drop
                                mysql> drop table laohe_mysql.stuinfo;                    //直接删除表
                                案例：
                                mysql> create table laohe_mysql.stuinfo( 学号 char(15), 姓名 char(15), 性别 char(15), 手机号 char(15), 通信地址 char(15) ) DEFAULT CHARSET=utf8;
                                DEFAULT CHARSET //不能小写
                                学号 char(15) 汉字不能带双引号
                                mysql> desc laohe_mysql.stuinfo;
                                mysql> show create table stuinfo;               //查看建表时的命令，能看到字符集
                                mysql> insert into laohe_mysql.stuinfo values("01","老何","男","181","西安"),("02","老张","女","152","北京");     //字符串需要加引号，其他的不加（int数值）
                                mysql> select * from laohe_mysql.stuinfo;
                                
                                
MYSQl 数据类型
        RDBMS 关系型数据库
        数据类型的种类
                数值类：体重、身高、成绩、工资
                        整形类型
                                有符号 负数
                                无符号 正数
                                        类型             名称               有符号范围              无符号范围
                                        tinyint         微小整数            -128~127               0~255
                                        smallint        小整数             -32768~32768            0~65535
                                        mediumint       中整数             -2^23~2^23-1            0~2^24-1
                                        int             大整数             -2^31~2^31-1            0~2^32-1
                                        bigint          极大整数           -2^63~2^63-1             0~2^64-1 
                                        unsigned        使用无符号存储范围
                        浮点型
                                格式1：字段1 类型；
                                格式2：字段名 类型（总宽度，小数位数）    float(7,2)总7位，小数点2位 XXXXX.XX
                                        类型                     名称              有符号/无符号范围
                                        float                   单精度             0~2^32-1
                                        double                  双精度             0~2^64-1
                字符型：姓名、工作单位、通信地
                        定长 char
                                最大字符个数255，不指定，默认为1
                                不顾指定字符个数时，在右侧用空格补齐
                                字符个数超出时，无法写入数据
                        变长 varchar
                                按数据实际大小分配存储空间
                                字符个数超出时，无法写入数据
                                varchar没有默认长度，必须写上
                        大文本类型 text、blob
                                字符数大于65535存储时，使用                 
                枚举类：兴趣爱好、性别、专业
                        字段值，只能在列举的范围内选择
                                单选 enum
                                        格式 字段名 enum（值1， 值2， 值N)
                                        仅能选择一个值
                                        字段值必选在列表里选择
                                多选 set
                                        格式 字段名 set（值1， 值2， 值N)
                                        仅能选择一个值
                                        字段值必选在列表里选择
                        mysql> create table t9 (姓名 char(10), 性别 enum("男", "女" ,"其他"), 爱好 set("吃","喝","嫖","赌")) DEFAULT CHARSET=utf8;
                        mysql> desc t9;
                        mysql> insert into t9 values("老李","其他","嫖,赌");
                        mysql> select * from t9;
                日期时间型：出生日期、注册时间
                        日期时间 datetime
                                范围：1000-01-01 00：00：00~9999-12-31 23：59：59
                                格式：yyyymmddhhmmss
                                必须赋值，不赋值为空
                                mysql> desc t8;
                                                +----------+-----------+------+-----+-------------------+-----------------------------+
                                                | Field    | Type      | Null | Key | Default           | Extra                       |
                                                +----------+-----------+------+-----+-------------------+-----------------------------+
                                                | meetting | datetime  | YES  |     | NULL              |                             |
                                                | party    | timestamp | NO   |     | CURRENT_TIMESTAMP | on update CURRENT_TIMESTAMP |
                                                +----------+-----------+------+-----+-------------------+-----------------------------+
                        日期时间 timestamp
                                范围：1970-01-01 00：00：00~2038-12-31 23：59：59
                                格式：yyyymmddhhmmss
                                可以不赋值，不赋值时位系统时间
                                        mysql> create table t8 (meetting datetime, party timestamp) DEFAULT CHARSET=utf8;
                                        mysql> insert into t8(meetting) values(20220714171020);
                                        mysql> select * from t8;        //timestap 可以不赋值，默认为系统时间
                                                +---------------------+---------------------+
                                                | meetting            | party               |
                                                +---------------------+---------------------+
                                                | 2022-07-14 17:10:20 | 2022-07-14 17:12:12 |
                                                +---------------------+---------------------+
                        日期 date
                                范围：0001-01-01~9999-12-31
                                格式：yyyymmdd
                        年 year
                                范围：1901~2155
                                格式：yyyy
                                一般使用4位赋值，也可以两位
                                        01~69 2001~2069
                                        70~99 1970~1999
                        时间 time
                                格式：HH:MM:SS
                        时间函数
                                now()   year()  month() day()   date()  time()
                                curtime()       curdate()
                        mysql> create table laohe_mysql.t4(name char(10),yourstart year(4),up_time time,birthday date,party datetime) DEFAULT CHARSET=utf8;
                        yourstart year(4) 不能写成 yourstart year(4),可以用your_start代替
                        DEFAULT 别忘了字母
                        （XX,XX,XX）所有列都在一个括号下，插入数据时才是多个括号
                        create table laohe_mysql.t5 (名字 char(10),哪一年 year(4),上传时间 time,生日 date,聚会 datetime) DEFAULT CHARSET=utf8;
                        创建时，切记不能有双引号
                        mysql> desc laohe_mysql.t5;
                        查看表结构
                        mysql> insert into t5 values("老张",1990,162730,19891219,20220714162730);
                        这是正确格式，会自动转义
                        mysql> insert into laohe_mysql.t5 values("老张","1988","16:16:10","1990-01-26","2022-07-14 16:14:56");
                        有特殊符号，空格的记者加上双引号，这样不对，全部变成了字符串
                        
                        使用时间函数赋值
                        时间函数
                                now()系统当前的日期和时间    year()获取年      month()获取月     day()获取日       date()获取日期        time()获取时间
                                curtime()获取系统当前的时间       curdate()获取系统当前日期
                        mysql> select now();            2022-07-14 16:35:07     //输出系统当前日期加时间    
                        mysql> select curtime();        16:36:17
                        mysql> insert into t5 values("laoli", 2000, curtime(), curdate(), now());
                        mysql> select year(now());              //组合使用
                        +-------------+
                        | year(now()) |
                        +-------------+
                        |        2022 |
                        +-------------+
                        
表结构
约束条件
        作用是限制如何给字段赋值
        NULL
                是否允许为空          null OR not null        默认是允许
                enum ("对","错") not null default “对”
                mysql> insert into laohe_mysql.t4(name, yourstart) values("老李",2022);           //对指定列进行赋值
        KEY     键值     
                普通索引           index
                唯一索引           unique
                主键              primary key
                外键              foreign key
                全文索引           fulltext 
        DEFAULT 默认值
                默认值：不给字段赋值时，使用默认值
                默认不定义时，是null
                定义default值 要与字段类型匹配
        Extra
                额外设置 默认都没有额外设置
修改表结构
        命令 alter table 库名.表名 执行动作
                执行动作
                        添加新字段
                                add 字段名 类型 【约束条件】；                  //默认添加在末尾
                                add 字段名 类型 【约束条件】 after 字段名；      //指定到某字段后面
                                add 字段名 类型 【约束条件】 first；            //添加到最前面
                                mysql> alter table t9 add (新增1 int(10), 新增2 char(10) not null default "呵呵");    //不涉及挪位置，可以多个,可以括号
                                mysql> alter table t9 add 新增5 char(10) after name;
                                mysql> alter table t9 add  新增4  char(10) first;         //涉及挪位置时，不能用括号
                        修改字段类型
                                modify
                                修改的字段类型不能与已存储的数据冲突
                                alter table 库名.表名 modify 字段名 类型（宽度） 约束条件 【after 字段名 | first】
                                mysql> alter table laohe_mysql.t4 modify yourstart int(5) not null default 2 after birthday;
                        修改字段名
                                change 既能改名，又能改类型
                                alter table 库名.表名 change 源字段名 新字段名 类型（宽度） 约束条件
                                mysql> alter table laohe_mysql.t4 change yourstart 年 year;
                        删除字段
                                drop
                                alter table 库名.表名 drop 字段名；
                                mysql> alter table t4 drop 新字段2；
                        修改表名
                                rename
                                alter table 库名.表名 rename 新表名；
                                mysql> alter table 学生表2 rename stu2;            //修改表名，不是修改字段名；修改字段名用change
                                不要改库名，改完库名，找不到数据
MYSQL键值
        MYSQL键值概述
                键值类型
                        普通索引 index
                                索引是什么
                                        类似于书的目录
                                        对表中的字段进行排序
                                        索引类型包括
                                                Btree           二叉树，一个主节点下有且只有两个子节点
                                                B+tree
                                                hash
                                        索引的优缺点
                                                优点
                                                        通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性
                                                        加快数据的查询范围
                                                        数据的查询诉求远大于写的诉求！！
                                                缺点
                                                        对表进行数据的增删改，索引也要动态调整，降低了数据的维护速度
                                                        索引要占物理空间
                                  使用规则
                                        一个表可以有多个index字段
                                        字段的值允许重复，且可以赋NULL值
                                        通常吧作为查询条件的字段设置为index字段
                                        index字段标识是MUL
                                  创建索引
                                        建表时，创建索引
                                                create table 库.表（字段列表 ,index(字段名1)， index（字段名2））;
                                        在已有表中创建索引
                                                create index 索引名 on 表名（字段）；
                                        查看索引字段
                                                基本查看    desc 表名；中的key列
                                                详细查看    show index from 表名 \G；          //\G竖着显示，默认横着
                                        删除索引
                                                drop index 索引名 on 表名；
                                        mysql> create table t2 ( 
                                            -> name char(10),
                                            -> age int,
                                            -> class char(10),
                                            -> email char(32),
                                            -> index(name), index(age)
                                            -> ) DEFAULT CHARSET=utf8;
                                        mysql> create table t2 ( name char(10), age int, class char(10), email char(32), index(name), index(age) ) DEFAULT CHARSET=utf8;                \\索引名可以和表名不一致,这样创建的index默认是列名，不支持多列一个index名，最好别这样
                                        index这种key_name是自定义的，primart key 的key_name固定是PRIMARY
                                        mysql> desc t2;
                                                +-------+----------+------+-----+---------+-------+
                                                | Field | Type     | Null | Key | Default | Extra |
                                                +-------+----------+------+-----+---------+-------+
                                                | name  | char(10) | YES  | MUL | NULL    |       |
                                                | age   | int(11)  | YES  | MUL | NULL    |       |
                                                | class | char(10) | YES  |     | NULL    |       |
                                                | email | char(32) | YES  |     | NULL    |       |
                                                +-------+----------+------+-----+---------+-------+
                                       mysql> show index from t2 \G;
                                       mysql> create index class on t2(class);          //已有表，新增index
                                       mysql> create index laohe on t2(class, email);   //多列数据，一张表
                                       mysql> drop index age on t2;
                                       mysql> show index from t2 \G;
                                       mysql> insert into t2 values("老何", 20, "一班", "7455@.com"),("老李",520, "二班", "hejian@.com");
                                       
                        唯一索引 unique
                        主键 primary key
                                使用规则
                                        字段不允许重复，且不允许赋null值                               //证件：身份证等
                                        一个表中只能有一个primary key字段
                                        多个字段都可作为主键，成为符合主键，必须一起创建
                                        主键字段的标志是PRI
                                        主键通常与auto_increment连用                                //自增长 i++
                                        通常把表中唯一标识记录的字段设置为主键；记录编号字段              //序号
                                        为了，不空且不重复
                                创建主键
                                        建表时，创建主键字段
                                                mysql> create table t10(
                                                    -> name char(10),
                                                    -> id int primary key)
                                                    -> DEFAULT CHARSET=utf8;
                                                mysql> create table t11( name char(10), id int, primary key(name)) DEFAULT CHARSET=utf8;        //两种写法都可以
                                                mysql> insert into t11 values("老李",10);
                                                mysql> insert into t11 values("老李",10);         //name是主键，不能同名重复
                                                mysql> insert into t11 values(null,10);          //不能赋空值
                                        在已有表里，创建主键字段
                                                alter table 表名 add primary key（字段）
                                                mysql> alter table t11 drop primary key;        //删除主键
                                                mysql> alter table t11 add primary key(name);
                                                mysql> create index XXX on t11(name, id);
                                                index 支持定义key_name名称，可以把多列放一个index
                                                mysql> select name from t11 where name is null;
                                                查找name是否有为空
                                                
                                
                        外键 oreign key
                        全文索引 fulltext 











